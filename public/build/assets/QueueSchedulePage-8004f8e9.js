import{Q as k}from"./queue_main-80214df2.js";import{G as g}from"./glightbox-d1fa783f.js";import{T as z}from"./TechSection-0f2a3e53.js";import{_ as b}from"./_plugin-vue_export-helper-c27b6911.js";import{e as u,f as h,r as v,o as a,c as l,b as e,F as r,g as d,a as y,h as f,t as m,d as j}from"./runtime-core.esm-bundler-7ce0e83d.js";import"./skill-icon-467e4089.js";import"./html-055a12e9.js";import"./css-19fbf238.js";import"./js-e0bf548e.js";import"./figma-9da12e4f.js";const _={components:{TechSection:z},setup(){const o=u([{src:"/media/imgs/projects/web/queue_main.png",alt:"Beosztás lefedettség kép 1"},{src:"/media/imgs/projects/web/queue_1.png",alt:"Beosztás lefedettség kép 2"},{src:"/media/imgs/projects/web/queue_2.png",alt:"Beosztás lefedettség kép 3"},{src:"/media/imgs/projects/web/queue_3.png",alt:"Beosztás lefedettség kép 4"},{src:"/media/imgs/projects/web/queue_4.png",alt:"Beosztás lefedettség kép 5"},{src:"/media/imgs/projects/web/queue_5.png",alt:"Beosztás lefedettség kép 6"}]);return h(()=>{g({selector:".glightbox",closeEffect:"zoom",loop:!0})}),{images:o}},data(){return{Queue_main:k,features:["Napi és heti nézet","Időszak léptetés előre és hátra","Vissza állítás a mai napra gomb","Bármilyen meglévő rendszerbe beilleszthető","Az adatok egy JavaScript fájlból érkező tömbből származnak, így bármilyen struktúrált eseménylistát képes kezelni","Aktuáls nap kiemelve","Lefedett és lefedetlen időszakok megjelenítése",'Kis képernyőn ":hover"-re megjelenő időpontok']}}},w={class:"web-projects-page"},x={class:"project-content-wrapper"},S={class:"container"},A={class:"container py-5"},B={class:"row align-items-center"},q={class:"col-12 col-md-7 text-center"},E=["href"],Q=["src"],D={class:"col-12 col-md-5"},N={class:"list-group project-glass-list"},V={class:"list-group-index"},F={class:"row py-4"},G={class:"row mb-5 py-4"},L={class:"row justify-content-center"},P=["href"],T=["src","alt"];function C(o,t,H,c,i,I){const p=v("tech-section");return a(),l("div",w,[t[4]||(t[4]=e("div",{class:"header"},[e("h1",null,"Beosztás naptár lefedettség jelzéssel"),e("p",null,"Beosztás megjelenítő napi és heti nézetben, lefedettségi időszak jelzéssel"),e("a",{href:"https://github.com/nemethd01/QueueSchedule.git",target:"_blank",class:"btn custom-button"},"Nézd meg GitHubon")],-1)),e("div",x,[e("div",S,[e("div",A,[t[1]||(t[1]=e("h3",{class:"mb-3"},"Projekt funkciók",-1)),e("div",B,[e("div",q,[e("a",{href:i.Queue_main,class:"glightbox"},[e("img",{src:i.Queue_main,alt:"Beosztás és lefedettség jelölő táblázat",class:"img-fluid rounded shadow-lg project-img"},null,8,Q)],8,E)]),e("div",D,[e("ul",N,[(a(!0),l(r,null,d(i.features,(s,n)=>(a(),l("li",{key:n,class:"list-group-item"},[e("span",V,"#"+m(n+1),1),j(" "+m(s),1)]))),128))])])]),e("div",F,[y(p)]),t[2]||(t[2]=f('<div class="row py-4"><h3 class="mb-3">Fejlesztési folyamat</h3><div class="development-process-text"><div class="mb-2"> A beosztás lefedettséget megjelenítő projekt egy kérésre készült. Az igény egy olyan heti és napi nézetben is elérhető táblázatra irányult, ami képes megfelelően kezelni a dolgozók készenléti beosztását, pontosan és átláthatóan megjeleníti az adott idő intervallumot, bármilyen jelenleg meglévő (legacy és modern) webes felületre beilleszthető legyen, valamint láthatóak a lefedett és üres idő intervallumok. Első lépésként Figma-ban készítettem egy látványtervet az igénylő elképzelései alapján, majd ennek prezentálása után neki láttam a dinamikus táblázat létrehozásának. </div><div class="mb-2"> A dolgozók beosztásai megjelenítésére kék háttérszínű kártyákat hoztam létre, amelyek a kezdőidőpont napján, megfelelő helyen és szélességben jelennek meg. Problémaként merült fel, hogy a rövidebb időszakokra vonatkozó beosztások heti nézetben kisebb képernyőkön nem fértek ki megfelelően. Ezt a problémát az alábbi CSS megoldással kezeltem: </div><div class="mb-2"><div class="code-block"><span class="keyword">@container</span> (max-width: 40px) {<br><span class="selector">.start-time span, .end-time span</span> {<br>   display: none;<br> }<br> }<br><br><span class="keyword">@container</span> (max-width: 10px) {<br><span class="selector">.start-time img, .end-time img</span> {<br>   display: none;<br> }<br> } </div></div><div class="mb-2"> Amint a &quot;@container&quot; érzékeli, hogy a kártya 40px-nél kisebbre szűkül (tehát a kezdő és a befejező időpont már nem fér bele jól olvashatóan), elrejti először a string-két megjelenő időpontokat, majd 10px alatt a megjelenő svg ikonokat is eltünteti. Ezek az elemek &quot;:hover&quot; eseményre jelennek meg újra, biztosítva az olvashatóságot. </div><div class="mb-2"> A legnagyobb kihívást a megfelelő dátumkezelés jelentette számomra, amit JavaScript Date objektummal valósítottam meg. A heti és napi nézet közötti váltás, az aktuális dátum kiemelése, valamint az előző és következő időszakok közötti navigáció pontos működése érdekében megfelelő logikát kellett kialakítani. A rendszerben az aktuális dátumhoz viszonyítva számítódnak ki a hét napjai. Például a heti nézetben a hétfő mindig az adott hét első napja, míg a napi nézetben kizárólag az adott nap kerül kijelölésre. Ehhez az alábbi módszert alkalmaztam: </div><div class="mb-2"><div class="code-block"><span class="keyword">function</span> getWeekStart(date) {<br>   <span class="keyword">const</span> day = date.getDay();<br>   <span class="keyword">const</span> diff = date.getDate() - day + (day === 0 ? -6 : 1); <span class="comment">// Monday is the first day</span><br>   <span class="keyword">return</span> <span class="keyword">new</span> Date(date.setDate(diff));<br> } </div></div><div class="mb-2"> Ez a függvény biztosítja, hogy a hét kezdőnapja mindig hétfő legyen, még akkor is, ha a hét bármely más napján hívjuk meg. Az így kapott kezdődátum alapján generálódik a teljes heti nézet. </div><div class="mb-2"> A napi nézet esetén az adott naphoz rendelt beosztások kerülnek kiemelésre. Az aktuális dátum kiemelésére külön osztályt alkalmaztam, így vizuálisan is azonnal felismerhető a mai nap: </div><div class="mb-2"><div class="code-block"><span class="keyword">const</span> today = <span class="keyword">new</span> Date().toISOString().split(<span class="string">&#39;T&#39;</span>)[0];<br><span class="keyword">const</span> headers = document.querySelectorAll(<span class="string">&#39;.date-header&#39;</span>);<br><br> headers.forEach(header =&gt; {<br>   <span class="keyword">if</span> (header.dataset.date === today) {<br>     header.classList.add(<span class="string">&#39;today-header&#39;</span>);<br>   }<br> }); </div></div><div class="mb-2"> Ezzel a megoldással az aktuális nap oszlopa automatikusan kiemelődik a táblázatban. </div></div></div>',1)),e("div",G,[t[0]||(t[0]=e("h3",{class:"mb-5"},"Képernyőképek",-1)),e("div",L,[(a(!0),l(r,null,d(c.images,(s,n)=>(a(),l("div",{key:n,class:"col-md-4 col-sm-6 mb-4"},[e("a",{href:s.src,class:"glightbox","data-gallery":"gallery1"},[e("img",{src:s.src,class:"img-fluid rounded shadow",alt:s.alt},null,8,T)],8,P)]))),128))])]),t[3]||(t[3]=e("div",{class:"text-center"},[e("a",{href:"https://github.com/nemethd01/QueueSchedule.git",target:"_blank",class:"btn custom-button"},"Nézd meg GitHubon")],-1))])])])])}const $=b(_,[["render",C]]);export{$ as Q};
